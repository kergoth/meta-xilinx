Fix for RandR.

The X server needs to perform internal initialization of its
screen info before it will report that there are any outputs.  That
is, it needs to go through the RandR code RRGetInfo() ->
RRScanOldConfig() -> RROutputCreate() -> pSrcPriv->numOutputs++

In QXcbConnection::updateScreens(), the Qt5 XCB plugin was using 
xcb_randr_get_screen_resources_current() rather than
xcb_randr_get_screen_resources().  The two routines are the same
except that the latter one causes the server to invoke RRGetInfo()
and update its information.  That allows the plugin's updateScreens()
to immediately know about the X screens and crtcs and not fall into the
"assume there is one screen" case where it creates a fake/temporary
screen.

The application will eventually find out about the screens and crtcs
from the X server via the XCB_RANDR_SCREEN_CHANGE_NOTIFY event.  At
that point, the XCB plugin will discard the fake screen and begin using
the real one.  However, that event comes too late for proper XCB plugin
initialization.  Using the above fake screen, the plugin queries an
invalid crtc ID causing the error:
    QXcbConnection: XCB error: 163 (Unknown), sequence: 154, 
    resource id: 0, major code: 148 (Unknown), minor code: 20
Also, this event occurs after the example apps call QXcbWindow::show().
The result is that only the fake window is made visible while the
proper one reported by the notify event is never made visible.
Index: qtbase-opensource-src-5.2.0/src/plugins/platforms/xcb/qxcbconnection.cpp
===================================================================
--- qtbase-opensource-src-5.2.0.orig/src/plugins/platforms/xcb/qxcbconnection.cpp	2013-12-08 22:39:53.000000000 +0530
+++ qtbase-opensource-src-5.2.0/src/plugins/platforms/xcb/qxcbconnection.cpp	2014-01-28 20:32:54.847839985 +0530
@@ -144,23 +144,23 @@
             xcb_generic_error_t *error = NULL;
             xcb_randr_get_output_primary_cookie_t primaryCookie =
                 xcb_randr_get_output_primary(xcb_connection(), xcbScreen->root);
-            xcb_randr_get_screen_resources_current_cookie_t resourcesCookie =
-                xcb_randr_get_screen_resources_current(xcb_connection(), xcbScreen->root);
+            xcb_randr_get_screen_resources_cookie_t resourcesCookie =
+                xcb_randr_get_screen_resources(xcb_connection(), xcbScreen->root);
             xcb_randr_get_output_primary_reply_t *primary =
                     xcb_randr_get_output_primary_reply(xcb_connection(), primaryCookie, &error);
             if (!primary || error) {
                 qWarning("QXcbConnection: Failed to get the primary output of the screen");
                 free(error);
             } else {
-                xcb_randr_get_screen_resources_current_reply_t *resources =
-                        xcb_randr_get_screen_resources_current_reply(xcb_connection(), resourcesCookie, &error);
+                xcb_randr_get_screen_resources_reply_t *resources =
+                        xcb_randr_get_screen_resources_reply(xcb_connection(), resourcesCookie, &error);
                 if (!resources || error) {
                     qWarning("QXcbConnection: Failed to get the screen resources");
                     free(error);
                 } else {
                     xcb_timestamp_t timestamp = resources->config_timestamp;
-                    outputCount = xcb_randr_get_screen_resources_current_outputs_length(resources);
-                    xcb_randr_output_t *outputs = xcb_randr_get_screen_resources_current_outputs(resources);
+                    outputCount = xcb_randr_get_screen_resources_outputs_length(resources);
+                    xcb_randr_output_t *outputs = xcb_randr_get_screen_resources_outputs(resources);
 
                     for (int i = 0; i < outputCount; i++) {
                         xcb_randr_get_output_info_reply_t *output =

